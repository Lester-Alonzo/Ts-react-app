{"version":3,"sources":["logo.svg","components/Cardtarea.tsx","components/Listatareas.tsx","components/Formtarea.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Tareas","task","Delete","className","title","hidden","id","description","onClick","Listatareas","tasks","map","tarea","initialState","Formtarea","addANewTask","useState","Task","setTask","InputTitle","useRef","handleInputCHange","target","name","value","onSubmit","e","preventDefault","current","focus","type","placeholder","onChange","autoFocus","ref","rows","App","completed","style","height","href","src","logo","alt","width","Date","getTime","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35319a3b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { Tarea } from \"../interfaces/Task.interface\";\n\ninterface Props {\n  task: Tarea;\n  Delete: (id: number) => void;\n}\nexport default function Tareas({ task, Delete }: Props) {\n  return (\n    <div className=\"card card-body bg-secondary rounded-0 text-dark \">\n      <h2>{task.title}</h2>\n      <p hidden>{task.id}</p>\n      <p>{task.description}</p>\n      <button\n        className=\"btn btn-danger\"\n        onClick={() => task.id && Delete(task.id)}\n      >\n        Delete\n      </button>\n    </div>\n  );\n}\n","import { Tarea } from \"../interfaces/Task.interface\";\nimport Cardtarea from \"./Cardtarea\";\ninterface Props {\n  tasks: Tarea[];\n  Delete: (id: number) => void;\n}\nexport default function Listatareas({ tasks, Delete }: Props) {\n  return (\n    <>\n      {tasks.map((tarea) => (\n        <div className=\"col-md-4 pb-2\" key={tarea.id}>\n          <Cardtarea task={tarea} Delete={Delete} />\n        </div>\n      ))}\n    </>\n  );\n}\n","import { AiOutlinePlus } from \"react-icons/ai\";\nimport { ChangeEvent, FormEvent, useState, useRef } from \"react\";\nimport { Tarea } from \"../interfaces/Task.interface\";\ntype HandleInputChange = ChangeEvent<HTMLInputElement | HTMLTextAreaElement>;\ninterface Props {\n  addANewTask: (task: Tarea) => void;\n}\nconst initialState = {\n  title: \"\",\n  description: \"\",\n};\nexport default function Formtarea({ addANewTask }: Props) {\n  const [Task, setTask] = useState(initialState);\n  const InputTitle = useRef<HTMLInputElement>(null);\n  const handleInputCHange = ({\n    target: { name, value },\n  }: HandleInputChange) => {\n    setTask({\n      ...Task,\n      [name]: value,\n    });\n  };\n  const hableNewTask = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    addANewTask(Task);\n    setTask(initialState);\n    InputTitle.current?.focus();\n  };\n  return (\n    <div className=\"card card-body bg-secondary text-dark\">\n      <h1>AÃ±adir Tarea</h1>\n      <form onSubmit={hableNewTask}>\n        <input\n          type=\"text\"\n          placeholder=\"Escribe un titulo\"\n          name=\"title\"\n          className=\"form-control mb-3 rounded-0 shadow-none border-0\"\n          onChange={handleInputCHange}\n          value={Task.title}\n          autoFocus\n          ref={InputTitle}\n        />\n        <textarea\n          name=\"description\"\n          rows={2}\n          placeholder=\"Escribe una descripcion\"\n          className=\"form-control mb-3 shadow-none border-0\"\n          onChange={handleInputCHange}\n          value={Task.description}\n        ></textarea>\n        <button className=\"btn btn-primary\">\n          Agregar <AiOutlinePlus />\n        </button>\n      </form>\n    </div>\n  );\n}\n","import \"./App.css\";\nimport logo from \"./logo.svg\";\nimport { Tarea } from \"./interfaces/Task.interface\";\nimport { useState } from \"react\";\nimport Listatareas from \"./components/Listatareas\";\nimport Formtarea from \"./components/Formtarea\";\ninterface Props {\n  title?: string;\n  id: number;\n}\n\nexport function App({ title, id }: Props) {\n  const [Task, setTask] = useState<Tarea[]>([\n    {\n      id: 1,\n      title: \"Learn Ts React\",\n      description: \"learn\",\n      completed: false,\n    },\n  ]);\n\n  const addANewTask = (task: Tarea) =>\n    setTask([...Task, { ...task, id: new Date().getTime(), completed: false }]);\n\n  const Deleted = (id: number) =>\n    setTask(Task.filter((task) => task.id !== id));\n\n  return (\n    <div className=\"bg-dark text-white\" style={{ height: \"100vh\" }}>\n      <nav className=\"navbar navbar-dark bg-primary\">\n        <div className=\"container\">\n          <a href=\"/\" className=\"navbar-brand\">\n            <img src={logo} alt={title} style={{ width: \"4rem\" }} />\n            {title}\n          </a>\n        </div>\n      </nav>\n      <main className=\"container p-4\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <Formtarea addANewTask={addANewTask} />\n          </div>\n          <div className=\"col-md-8\">\n            <div className=\"row\">\n              <Listatareas tasks={Task} Delete={Deleted} />\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootswatch/dist/morph/bootstrap.min.css\";\nimport \"./index.css\";\nimport { App } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App title=\"hello\" id={25} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}